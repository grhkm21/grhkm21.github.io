<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>elliptic-curve on Blog by grhkm</title>
    <link>https://grhkm21.github.io/tags/elliptic-curve/</link>
    <description>Recent content in elliptic-curve on Blog by grhkm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 18 May 2023 11:10:28 +0100</lastBuildDate><atom:link href="https://grhkm21.github.io/tags/elliptic-curve/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDLP (Upsolve)</title>
      <link>https://grhkm21.github.io/posts/hacktm-ddlp/</link>
      <pubDate>Thu, 18 May 2023 11:10:28 +0100</pubDate>
      
      <guid>https://grhkm21.github.io/posts/hacktm-ddlp/</guid>
      <description>Discussion at y011d4.
This post was originally under CM Method, but after writing the solution and thinking about it, I realised that I didn&amp;rsquo;t really use that much CM theory at all ðŸ˜… So I have isolated this into an individual post.
Source of this problem: HackTM Finals
Challenge Source import os import signal from random import SystemRandom random = SystemRandom() flag = os.getenv(&amp;#34;FLAG&amp;#34;, &amp;#34;FAKEFLAG{THIS_IS_FAKE}&amp;#34;) if __name__ == &amp;#34;__main__&amp;#34;: signal.alarm(60) try: # parameter setup p = int(input(&amp;#34;p = &amp;#34;)) assert p.</description>
    </item>
    
    <item>
      <title>CM method</title>
      <link>https://grhkm21.github.io/posts/cm-method/</link>
      <pubDate>Thu, 18 May 2023 03:43:00 +0100</pubDate>
      
      <guid>https://grhkm21.github.io/posts/cm-method/</guid>
      <description>Elliptic curves have become very important in the past 20 years, but it is still a difficult field for normal people (e.g. CTF players) to get into due to the maths barrier. One important construction in EC theory is the Complex Multiplication (CM) method, which is a method for generating elliptic curves with a given order or trace over finite fields. Here, I hope to give a short summary on how the method works, as previously I have only found this documented in academic papers.</description>
    </item>
    
  </channel>
</rss>
